<!--<!DOCTYPE web-app PUBLIC-->
<!--        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"-->
<!--        "http://java.sun.com/dtd/web-app_2_3.dtd" >-->
<!-- 要在Spring MVC实现对请求进行异步处理的逻辑，上面的<!DOCTYPE ...web-app_2_3.dtd">DTD声明不能再使用
     必须用新的支持Servlet 3.1规范的XSD声明，照抄廖雪峰即可-->
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <display-name>Archetype Created Web Application</display-name>

<!--   使用DelegatingFilterProxy来代理spring容器中创建的filter，
        filter-name和bean name要保持一致-->
    <filter>
        <filter-name>authFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <!-- 如果和bean的名字不一致，可以指定bean的名字 -->
        <init-param>
            <param-name>targetBeanName</param-name>
            <param-value>authFilter</param-value>
        </init-param>
<!--        让servlet容器支持异步处理-->
        <async-supported>true</async-supported>
    </filter>
    <filter-mapping>
        <filter-name>authFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextClass</param-name>
            <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
        </init-param>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>com.lwdHouse.learnjava.AppConfig</param-value>
        </init-param>
        <load-on-startup>0</load-on-startup>
<!--        让servlet容器支持异步处理-->
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>
</web-app>